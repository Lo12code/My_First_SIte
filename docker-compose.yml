version: '3.8'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  web:
    build: .
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && gunicorn reacjdjangoapp.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - static_volume:/code/staticfiles_collected
      - media_volume:/code/mediafiles
      - react_build_volume:/code/reacjdjangoapp/static/react_build
      - .:/code
    expose:
      - 8000
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DJANGO_DEBUG:-False}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE}
    restart: unless-stopped
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - ./frontend:/frontend
      - react_build_volume:/usr/share/nginx/html
    depends_on:
      - web
  apache:
    build:
      context: .
      dockerfile: Dockerfile.apache
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./apache-config:/etc/apache2:ro
      - ./ssl-certs:/etc/ssl/certs:ro
      - ./ssl-private:/etc/ssl/private:ro
      - ./letsencrypt:/etc/letsencrypt:ro
      - static_volume:/var/www/html/static
    depends_on:
      - frontend
    hostname: lorenzorangel.com.br
    environment:
      - VIRTUAL_HOST=lorenzorangel.com.br
      - VIRTUAL_PORT=443
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
  react_build_volume:

