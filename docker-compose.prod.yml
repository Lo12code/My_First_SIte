version: '3.8'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  web:
    build: .
    command: bash -c "gunicorn reacjdjangoapp.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - static_volume:/code/staticfiles_collected
      - media_volume:/code/mediafiles
      - react_build_volume:/code/reacjdjangoapp/static/react_build
      - .:/code
    expose:
      - 8000
    depends_on:
      - db
      - frontend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${DJANGO_SECRET_KEY}
      DEBUG: ${DJANGO_DEBUG:-False}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE}
    restart: unless-stopped
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.prod
    volumes:
      - react_build_volume:/usr/share/nginx/html/static/frontend
    depends_on:
  
volumes:
  postgres_data:
  static_volume:
  media_volume:
  react_build_volume:

# version: '3.8'

# services:
#   db:
#     image: postgres:14
#     environment:
#       POSTGRES_USER: django
#       POSTGRES_PASSWORD: django
#       POSTGRES_DB: django
#     volumes:
#       - postgres_data:/var/lib/postgresql/data

#   backend:
#     build:
#       context: .
#       dockerfile: Dockerfile.prod.backend
#     volumes:
#       - static_volume:/code/staticfiles_collected
#     environment:
#       - DJANGO_SETTINGS_MODULE=reacjdjangoapp.settings
#       - DEBUG=0
#     depends_on:
#       - db

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile.prod.frontend
#     volumes:
#       - react_build_volume:/frontend/build

#   proxy:
#     image: nginx:alpine
#     volumes:
#       - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf
#       - static_volume:/staticfiles:ro
#       - react_build_volume:/usr/share/nginx/html:ro
#     ports:
#       - "80:80"
#       - "443:443"
#     depends_on:
#       - backend
#       - frontend

# volumes:
#   postgres_data:
#   static_volume:
#   react_build_volume: