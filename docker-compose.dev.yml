services:
  db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: ${POSTGRES_PORT}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  backend:
    build:
      context: .
      dockerfile: ./reacjdjangoapp/Dockerfile.dev
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - db
      - frontend
    restart: unless-stopped
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    ports:
      - "8080:8080"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - db

volumes:
  postgres_dev_data:
